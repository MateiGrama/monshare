# https://docs.microsoft.com/vsts/pipelines/languages/xamarin

jobs:
- job: Android
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    buildConfiguration: 'Debug'
    outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
  steps:
  - task: NuGetToolInstaller@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'
  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*droid*.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'
  - task: DownloadSecureFile@1
    inputs:
      secureFile: 'monshare.keystore'
  - task: AndroidSigning@3
    inputs:
      apkFiles: '**/*.apk'
      apksignerKeystoreFile: 'monshare.keystore'
      apksignerKeystorePassword: 'HoneyBadger1234'
      apksignerKeystoreAlias: 'monshare'
      apksignerKeyPassword: 'HoneyBadger1234'
      zipalign: false
  - task: CopyFiles@2
    inputs:
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      OverWrite: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'apkapp'
      publishLocation: 'Container'


- job: iOS
  pool:
    vmImage: 'macOS-10.13'
  variables:
    buildConfiguration: 'Debug'
  steps:
  - task: NuGetToolInstaller@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'
  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*iOS.csproj'
      configuration: '$(buildConfiguration)'
      buildForSimulator: true
      packageApp: false
  - task: CopyFiles@2
    inputs:
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      OverWrite: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'iosapp'
      publishLocation: 'Container'
# This is the completed azure-pipelines.yaml file from previous steps.
variables:
  ConnectedServiceName: 'mgg17'
  WebAppName: 'monshare'

trigger:
- backend
- b/login
pool:
  name: Hosted Ubuntu 1604

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'
    architecture: 'x64'

- script: |
    python3.7 -m venv antenv3.7
    source antenv3.7/bin/activate
    pip3.7 install --upgrade pip
    pip3.7 install setuptools
    pip3.7 install -r requirements.txt

  # The displayName is shows in the pipeline UI when a build runs
  displayName: 'Install Dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # Optional

- task: AzureRMWebAppDeployment@4
  displayName: Azure App Service Deploy
  inputs:
    appType: webAppLinux
    RuntimeStack: 'PYTHON|3.7'
    ConnectedServiceName: $(ConnectedServiceName)
    WebAppName: $(WebAppName)
    Package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'

    # The following command is specific to the python-sample-vscode-flask-tutorial code.
    # You may or may not need a startup command for your own app.

    StartupCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
